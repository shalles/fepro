{
  "name": "gulp-fecmd",
  "version": "1.1.20",
  "description": "FE CMD(Common Module Definition) for gulp",
  "main": "index.js",
  "scripts": {
    "test": "gulp"
  },
  "keywords": [
    "fe",
    "js",
    "cmd",
    "common",
    "require",
    "commonjs"
  ],
  "files": [
    "index.js",
    "src"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shalles/gulp-fecmd.git"
  },
  "bugs": {
    "url": "https://github.com/shalles/gulp-fecmd/issues"
  },
  "author": {
    "name": "shalles",
    "email": "shalles@163.com",
    "url": "http://shalles.github.io"
  },
  "license": "MIT",
  "dependencies": {
    "babel-core": "^5.8.24",
    "gulp-util": "^3.0.6",
    "through2": "^2.0.0"
  },
  "readme": "# gulp-fecmd\n\n### what's gulp-fecmd\ngulp-fecmd is a tool that will help FE coding js with CMD(Common Module Definition) free without quote any third-party library in your program;\n\n### install\n\n```\nnpm install gulp-fecmd\n```\n\n### new version\n\n**`version`** 1.1.0 <br>\nsupport common file\n\nif there are some files are common in your project, you can separate them from page file,\nand just add \"!!\" at end of module path like such\n\n```js\nrequire('jquery!!');\nrequire('./lib/comm.js!!');\nrequire('./lib/comm.tpl!!');\nrequire('./lib/comm.json!!');\nrequire('./lib/comm.es6!!');\n// more ...\n```\nand the common.js file will export with your gulp.dist\n\nso you could add a new file source in you page file\n\n```html\n    <!-- add common.js before app.js -->\n    <script src=\"../js/common.js\"></script>\n    <script src=\"../js/app-1.js\"></script>\n```\n\n**`version`** 1.0.8 <br>\nsupport .es6 \nmore infomation [ https://babeljs.io/docs/learn-es2015/ ](https://babeljs.io/docs/learn-es2015/)\n\n\n**`version`** 1.0.7 <br>\nsupport .json\n\n\n**`version`** 1.0.6\n\nadd support bower module, and more please look down \"gulpfile.js\" and \"a.js\"\n\n\n\n### Documentation\n\n```js\n//gulpfile.js\n\nvar fecmd = require('gulp-fecmd');\n\ngulp.task('scripts', function() {\n    var data =  gulp.src('js/a.js')\n                    .pipe(sourcemaps.init());\n\n\n\n    // you should use it before minify or uglify and ...\n    // support bower module like \n    // fecmd({\n    //      modulePath: \"bower directory\"\n    // })\n    // if you don't give modulePath, default is the directory in \".bowerrc\" file \n    // or the folder bower_components in you build path but all the first is you \n    // scripts folder then bower module\n    data = data.pipe(fecmd({type: 'window'})); //export type mode default: require \n    \n    config.minify && (data = data.pipe(uglify()).pipe(sourcemaps.write()));\n    config.livereload && data.pipe(livereload());\n    config.version ?\n        data.pipe(rev())\n            .pipe(gulp.dest(config.scripts.exp))\n            .pipe(rev.manifest('js-map.json'))\n            .pipe(gulp.dest(config.tmp)) : \n        data.pipe(gulp.dest(config.scripts.exp));\n});\n\n```\n\n**program file**\n\n```html\n<!-- file index.html -->\n<script src=\"js/a.js\"></script>\n\n```\n\n```js\n// file a.js\n\nvar b = require('lib/b.js'); // '[./]lib/b[.js]'\nvar tpl = require('tpl/xx.tpl'); //return a string\nvar json = require('data/data.json'); //return the Object\nvar es6 = require('lib/file.es6'); // return es5 code\n// or\n// require('c.js');\n// require('d');\n// \n// if your version is 1.0.6 or newer you can quote module \n// from bower module lick this require('jquery'), without \n// extname and without a filename jquery or jquery.js file\n// in the same dir with a.js\nrequire('jquery');\n\n\n/* do something */\nvar console.log(b.c);\n\n```\n\n```js\n// file lib/b.js\n\n// other code do something\n// such\n// require()...\n// var a,b,c...\n// function(){} ...\n\n//export your module\n//*\nmodule.exports = {\n    c: 2,\n    cc: 23\n}\n/*/\n//or\nexports.c = 2;\nexports.cc = 23;\n//*/\n//\n```\n**es6**\n\n```js\n// file.es6\n\nclass Calc {\n    constructor() {\n        console.log('Calc constructor');\n    }\n    add(a, b) {\n        return a + b;\n    }\n}\n\nmodule.exports = Calc;\n\n// usage\n// var c = new Calc();\n// console.log(c.add(1, 2));\n```\n\n**template**\n\nrequire support template (*.tpl) like this file \"xx.tpl\"\nand export a string\n\n```html\n<div>\n    {{#list}}\n    <span>{{supportTemplate}}</span>\n    {{/list}}\n</div>\n```\nexport\n```js\n\"<div>\\n    {{#list}}\\n    <span>{{supportTemplate}}</span>\\n    {{/list}}\\n</div>\"\n```\n\n## test demo \n\n[ https://www.npmjs.com/package/fepro ](https://www.npmjs.com/package/fepro)\n\n$ sudo npm install -g fepro\n$ fepro -b gulp \"your_demo_path\"\n$ cd \"your_demo_path\"\n$ fepro -i gulp\n$ gulp\n\n\n",
  "readmeFilename": "README.md",
  "gitHead": "b471387dad550f395aa7d0778caa252095cd098f",
  "homepage": "https://github.com/shalles/gulp-fecmd",
  "_id": "gulp-fecmd@1.1.20",
  "_shasum": "9d8541ea16ee6642a9f5f43625ac946e3b560b43",
  "_from": "gulp-fecmd@>=1.0.5 <2.0.0",
  "_resolved": "file:gulp-fecmd"
}
